package s6.suiviRegime.utilitaire;

import java.util.*;

public class ClasseAGenerer {
	String nomModele;
	List<String[]> attribut = new Vector<String[]>();
	String saveQuery = "INSERT INTO %s (%s) VALUES(%s)";
	String updateQuery = "UPDATE %s SET %s WHERE ID%s = ?";
	String deleteQuery = "DELETE FROM %s WHERE ID%s = ?";
	String findAllQuery = "SELECT * FROM %s";
	String findByIdQuery = "SELECT * FROM %s WHERE ID%s = ?";
	
	public ClasseAGenerer(String nomModele, List<String[]> attribut) {
		this.setNomModele(nomModele);
		this.setAttribut(attribut);
	}
	public ClasseAGenerer(String nomModele) {
		this.setNomModele(nomModele);
	}

	public String getNomModele() {
		return nomModele;
	}
	public void setNomModele(String nomModele) {
		this.nomModele = nomModele.replace(".java", "");
	}
	public List<String[]> getAttribut() {
		return attribut;
	}
	public void setAttribut(List<String[]> attribut) {
		this.attribut = attribut;
	}
	public void addAttribut(String type, String nom) {
		String[] attribut = {type,nom};
		addAttribut(attribut);
		System.out.println(type +"\t"+ nom);
	}
	public void addAttribut(String[] attribut){
		getAttribut().add(attribut);
	}
	public String getNomTable(){
		return getNomModele().toUpperCase();
	}
	public String getNomDao(){
		return getNomModele().concat("Dao");
	}
	public String getNomFichier(){
		return getNomDao().concat(".java");
	}

	public String getSaveQuery() {
		String[] list = {"",""};
		for(String[] s : getAttribut()){
			if(s[1].compareToIgnoreCase("id")==0) continue;
			list[0] += s[1].toUpperCase();
			list[0] += ", ";
			list[1] += "?, ";
		}
		list[0] = list[0].substring(0, list[0].lastIndexOf(','));
		list[1] = list[1].substring(0, list[1].lastIndexOf(','));
		String save = String.format(saveQuery, getNomTable(), list[0],list[1]);
		return save;
	}
	
	public String getUpdateQuery(){
		String list = "";
		for(String[] s : getAttribut()){
			if(s[1].compareToIgnoreCase("id")==0) continue;
			list += s[1].toUpperCase();
			list += "= ?, ";
		}
		list = list.substring(0, list.lastIndexOf(','));
		String update = String.format(updateQuery, getNomTable(), list, getNomTable());
		return update;
	}
	public String generateDelete(){
		return String.format(deleteQuery, getNomTable(), getNomTable());
	}
	public String generateFindAll(){
		return String.format(findAllQuery, getNomTable());
	}
	public String generateFindById(){
		return String.format(findByIdQuery, getNomTable(), getNomTable());
	}
}
