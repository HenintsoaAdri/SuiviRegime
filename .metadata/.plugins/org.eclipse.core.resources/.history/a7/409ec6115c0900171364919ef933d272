package s6.suiviRegime.daoGenere;
import java.sql.*;
import java.util.*;
import s6.suiviRegime.modele.*;
public class SportDao{ 
public  void save(Sport model) throws Exception{

String query = "INSERT INTO SPORT (SPORT, ACTIVITE) VALUES(?, ?)";
Connection con = null;
PreparedStatement statement = null;
try{
	 con = UtilDB.getConnexion();
	 statement = con.prepareStatement(query);
	 con.setAutoCommit(false);
	 statement.setString(1, model.getSport());
	 statement.setString(2, model.getActivite());
statement.execute();
con.commit();
}
catch(Exception e){
con.rollback();
e.printStackTrace();
throw new Exception(" Sport contenant des erreurs, création échouée.");;
}
}finally {
if(statement != null)statement.close();
if(con != null)con.close();
}
public  void update(Sport model) throws Exception{

String query = "UPDATE SPORT SET SPORT= ?, ACTIVITE= ? WHERE IDSPORT = ?";
Connection con = null;
PreparedStatement statement = null;
try{
	 con = UtilDB.getConnexion();
	 statement = con.prepareStatement(query);
	 con.setAutoCommit(false);
	 statement.setString(1, model.getSport());
	 statement.setString(2, model.getActivite());
	 statement.setInt(3, model.getId());
statement.execute();
con.commit();
}
catch(Exception e){
con.rollback();
e.printStackTrace();
throw e;
}
}finally {
if(statement != null)statement.close();
if(con != null)con.close();
}
public void delete(Sport model) throws Exception{

String query = "DELETE FROM SPORT WHERE IDSPORT = ?";
Connection con = null;
PreparedStatement statement = null;
try{
	 con = UtilDB.getConnexion();
	 statement = con.prepareStatement(query);
	 con.setAutoCommit(false);
	 statement.setInt(1, model.getId());
statement.execute();
con.commit();
}
catch(Exception e){
con.rollback();
e.printStackTrace();
throw e;
}
}finally {
if(statement != null)statement.close();
if(con != null)con.close();
}
public List<Sport> findAll() throws Exception{

String query = "SELECT * FROM SPORT";
Connection con = null;
PreparedStatement statement = null;
try{
	 con = UtilDB.getConnexion();
	 statement = con.prepareStatement(query);
	 return DBToModel(statement.executeQuery());
}
catch(Exception e){
e.printStackTrace();
throw e;
}
}finally {
if(statement != null)statement.close();
if(con != null)con.close();
}
public List<Sport> findAll(int offset) throws Exception{

String query = "SELECT * FROM SPORT";
Connection con = null;
PreparedStatement statement = null;
try{
	 con = UtilDB.getConnexion();
	 statement = con.prepareStatement(query);
	 statement.setInt(1, offset);	 return DBToModel(statement.executeQuery());
}
catch(Exception e){
e.printStackTrace();
throw e;
}
}finally {
if(statement != null)statement.close();
if(con != null)con.close();
}
public Sport findById(int id) throws Exception{

String query = "SELECT * FROM SPORT WHERE IDSPORT = ?";
ResultSet res = null;
Connection con = null;
PreparedStatement statement = null;
try{
	 con = UtilDB.getConnexion();
	 statement = con.prepareStatement(query);
	 statement.setInt(1, id);
	 if(res.next()){
		 return Creation.creerSport(res);
	}
throw new Exception("Ce Sport est introuvable ou a été retiré");
}
catch(Exception e){
e.printStackTrace();
throw e;
}
}finally {
if(res != null) res.close();
if(statement != null)statement.close();
if(con != null)con.close();
}
}