<?xml version="1.0" encoding="UTF-8"?><testrun name="TestDAO" project="SuiviRegime" tests="7" started="7" failures="0" errors="1" ignored="0">
  <testsuite name="s6.suiviRegime.test.TestDAO" time="1.326">
    <testcase name="testAlimentationFind" classname="s6.suiviRegime.test.TestDAO" time="0.278"/>
    <testcase name="testSportConseilFind" classname="s6.suiviRegime.test.TestDAO" time="0.126">
      <error>org.postgresql.util.PSQLException: ERREUR: la colonne « idconseilsport » n'existe pas
  Position : 35&#13;
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2455)&#13;
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2155)&#13;
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:288)&#13;
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:430)&#13;
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:356)&#13;
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:168)&#13;
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:116)&#13;
	at s6.suiviRegime.dao.SportConseilDAO.findById(SportConseilDAO.java:139)&#13;
	at s6.suiviRegime.test.TestDAO.testSportConseilFind(TestDAO.java:66)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testSportFind" classname="s6.suiviRegime.test.TestDAO" time="0.113"/>
    <testcase name="testAlimentationConseilFind" classname="s6.suiviRegime.test.TestDAO" time="0.117"/>
    <testcase name="testRegimeFind" classname="s6.suiviRegime.test.TestDAO" time="0.112"/>
    <testcase name="testSportRegimeFind" classname="s6.suiviRegime.test.TestDAO" time="0.403"/>
    <testcase name="testPoidsFind" classname="s6.suiviRegime.test.TestDAO" time="0.176"/>
  </testsuite>
</testrun>
